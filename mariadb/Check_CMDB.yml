---
- name: Check if VM name exists in MariaDB and count VMs for the user
  hosts: localhost
  gather_facts: no
  vars:
    hostname: "{{ variable_hostname }}"
    requestor_name: "{{ awx_user_name }}"

  tasks:
    - name: Check if the VM name exists in the database
      community.mysql.mysql_query:
        login_host: "10.10.10.11"
        login_user: "{{ lookup('env', 'DB_USERNAME') }}"
        login_password: "{{ lookup('env', 'DB_PASSWORD') }}"
        login_db: "{{ lookup('env', 'DB_NAME') }}"
        query: |
          SELECT COUNT(*) AS vm_count, 
                 SUM(CASE WHEN requestor_name = '{{ requestor_name }}' THEN 1 ELSE 0 END) AS user_vm_count
          FROM vm_details 
          WHERE name = '{{ hostname }}' OR requestor_name = '{{ requestor_name }}';
      register: vm_check_result

    - name: Inspect the full structure of vm_check_result
      debug:
        var: vm_check_result

    - name: Fail if VM name exists in the database
      fail:
        msg: "VM name '{{ hostname }}' already exists in the database!"
      when: vm_check_result.query_result[0][0]["vm_count"] > 0

    - name: Set the count of VMs belonging to the user
      set_fact:
        user_vm_count: "{{ vm_check_result.query_result[0][0]['user_vm_count'] }}"

    - name: Display the count of VMs belonging to the user
      debug:
        msg: "The number of VMs belonging to the user '{{ requestor_name }}' is {{ user_vm_count }}."

    - name: Debug the result if VM does not exist
      debug:
        msg: "VM name '{{ hostname }}' does not exist in the database."
      when: vm_check_result.query_result[0][0]["vm_count"] == 0

    - name: Display the username
      debug:
        msg: "This job was started by {{ awx_user_name }}@tbs.tech"
        
    - name: Set Stats for requestor
      set_stats:
        data:
          variable_requestor: "{{ awx_user_name }}@tbs.tech"
          user_vm_count: "{{ awx_user_name }}"
