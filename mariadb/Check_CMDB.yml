---
- name: Check if VM name exists in MariaDB and fail if it does, also count all VMs for the user
  hosts: localhost
  gather_facts: no
  vars:
    hostname: "{{ variable_hostname }}"
    requestor_name: "{{ awx_user_name }}"  

  tasks:
    - name: Check if the VM name exists in the database
      community.mysql.mysql_query:
        login_host: "10.10.10.11"
        login_user: "{{ lookup('env', 'DB_USERNAME') }}"
        login_password: "{{ lookup('env', 'DB_PASSWORD') }}"
        login_db: "{{ lookup('env', 'DB_NAME') }}"
        query: "SELECT COUNT(*) AS vm_count FROM vm_details WHERE name = '{{ hostname | trim }}';"
      register: vm_check_result

    - name: Inspect the full structure of vm_check_result
      debug:
        var: vm_check_result

    - name: Fail if VM name exists in the database
      fail:
        msg: "VM name '{{ hostname }}' already exists in the database!"
      when: vm_check_result.query_result[0][0]["vm_count"] > 0

    - name: Query to count all VMs belonging to the user
      community.mysql.mysql_query:
        login_host: "10.10.10.11"
        login_user: "{{ lookup('env', 'DB_USERNAME') }}"
        login_password: "{{ lookup('env', 'DB_PASSWORD') }}"
        login_db: "{{ lookup('env', 'DB_NAME') }}"
        query: "SELECT COUNT(*) AS user_vm_count FROM vm_details WHERE requestor_name = '{{ requestor_name }}@tbs.tech';"
      register: user_vm_count_result

    - name: Inspect the full structure of user_vm_count_result
      debug:
        var: user_vm_count_result

    - name: Display the number of VMs belonging to the user
      debug:
        msg: "User {{ requestor_name }} has {{ user_vm_count_result.query_result[0][0]['user_vm_count'] }} VMs in the database."

    - name: Display the username
      debug:
        msg: "This job was started by {{ awx_user_name }}@tbs.tech"
        
    - name: Set Stats for requestor
      set_stats:
        data:
          variable_requestor: "{{ awx_user_name }}@tbs.tech"
